#!/bin/bash

# Create directory to store data
mkdir -p pokemon_data
ERROR_LOG="errors.txt"
: > "$ERROR_LOG"

# List of Pokémon
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch Pokémon data
fetch_pokemon() {
    local name=$1
    local attempt=1
    local success=false

    echo "Fetching data for $name..."

    while [ $attempt -le 3 ]; do
        response=$(curl -s -f "https://pokeapi.co/api/v2/pokemon/$name")
        if [ $? -eq 0 ]; then
            echo "$response" > "pokemon_data/${name}.json"
            echo "Saved data to pokemon_data/${name}.json ✅"
            success=true
            break
        else
            echo "Attempt $attempt failed for $name. Retrying..."
            sleep 1
            ((attempt++))
        fi
    done

    if [ "$success" = false ]; then
        echo "❌ Failed to fetch data for $name after 3 attempts." | tee -a "$ERROR_LOG" >&2
    fi
}

# Start all fetches in background and track PIDs
pids=()

for name in "${pokemon_list[@]}"; do
    fetch_pokemon "$name" &
    pids+=($!)
done

# Show running jobs
echo -e "\n⏳ Background jobs running:"
jobs

# Wait for all background jobs
for pid in "${pids[@]}"; do
    wait "$pid"
done

echo -e "\n✅ All fetches completed."

# Check if any jobs are still hanging (shouldn't be, but good practice)
if jobs | grep -q "Running"; then
    echo "⚠️ Hanging jobs detected. Killing them..."
    jobs -p | xargs kill -9
fi
